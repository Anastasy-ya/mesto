(()=>{"use strict";var __webpack_modules__={676:()=>{eval('\n;// CONCATENATED MODULE: ./src/utils/constants.js\n//селекторы для классов\nvar tags = {\n  popupOpened: ".popup_opened",\n  //пока не используется\n  classPopupOpened: "popup_opened",\n  //добавление класса без точки\n  templateBox: "#template",\n  //заменить темплейт в кард  пока не используется document.querySelector("#template")\n  signature: ".elements__signature",\n  elementsBox: ".elements__box",\n  //index\n  itemImage: ".elements__image",\n  templateItem: ".elements__item",\n  buttonLike: ".button-like",\n  buttonLikeActive: "button-like_active",\n  elementsDelete: ".elements__delete",\n  popupForm: ".popup__form",\n  popupCloseIcon: "popup-close-icon",\n  submitButtonSelector: ".popup__button",\n  inputErrorSign: "form__input_type_error",\n  //подсветка ошибки красным\n  inputSelector: ".form__input",\n  formSelector: ".popup__form",\n  inactiveButtonClass: "popup__button_inactive",\n  popupImage: ".popup__image",\n  popupSignature: ".popup__signature"\n};\nvar consts = {\n  bigImageLink: document.querySelector(".popup__image"),\n  //index\n  bigImageName: document.querySelector(".popup__signature") //index\n};\n\nvar buttonEdit = document.querySelector(".profile__edit-button"); //index\nvar profileName = document.querySelector(".profile__name"); //index\nvar profileJob = document.querySelector(".profile__about"); //index\nvar popupEdit = document.querySelector(".popup_type_profile-edit"); //index\nvar popupAdd = document.querySelector(".popup_type_add"); //index\nvar popupEditAvatar = document.querySelector(".popup_type_reload-avatar"); //index\nvar buttonAdd = document.querySelector(".add-button"); //index\nvar bigImage = document.querySelector(".popup_type_image"); //index\nvar elementsBox = document.querySelector(tags.elementsBox);\nvar profileAvatar = document.querySelector(".profile__avatar"); //index\nvar profileOverlay = document.querySelector(".profile__overlay"); //index\nvar popupWarning = document.querySelector(".popup_type_delete"); //index\n;// CONCATENATED MODULE: ./src/components/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(item, handleCardClick, checkLike, templateSelector, tags, handlerRemoveCard, userId) {\n    _classCallCheck(this, Card);\n    //(item, templateSelector, makeImageBig)  ({ item, handleCardClick }, templateSelector)\n    //в templateSelector попадет селектор темплейта при создании экземпляра карточки\n    this._item = item;\n    this._name = item.name; //title\n    this._link = item.link;\n    this._likes = item.likes;\n    this._id = item._id;\n    this._templateSelector = templateSelector; //селектор темплейта стал свойством объекта класса Card\n    this._handleCardClick = handleCardClick; //передали внешнюю функцию как параметр  временно убрана\n    this._handlerRemoveCard = handlerRemoveCard; //внешняя ф-я, открывающая попап с подтверждением\n    this._templateItem = tags.templateItem;\n    this._itemImage = tags.itemImage;\n    this._buttonLike = tags.buttonLike;\n    this._buttonLikeActive = tags.buttonLikeActive;\n    this._elementsDelete = tags.elementsDelete;\n    this._signature = tags.signature;\n    this._ownerId = item.owner._id;\n    this._userId = userId;\n    this._checkLike = checkLike;\n    // console.log(\'лайки этой карточки: \', this.likes);\n  }\n  _createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      //получим template-элемент и склонируем его\n      //селектор темплейта использован при поиске элемента нужного нам темплейта\n      var templateElement = document.querySelector(this._templateSelector).content.querySelector(this._templateItem).cloneNode(true);\n      return templateElement;\n      //получили копию элемента для изменения и дальнейшей вставки в dom\n    }\n  }, {\n    key: "setLike",\n    value: function setLike(_ref) {\n      var likes = _ref.likes;\n      //вызвать в глобальной области\n\n      if (!this.сheckUserLike()) {\n        this._addLike();\n        this._likeCounter.textContent++;\n      } else {\n        this._removeLike();\n        this._likeCounter.textContent--;\n      }\n      ;\n      this._likes = likes;\n      console.log(\'новые значения массива лайков\', likes);\n    }\n  }, {\n    key: "_addLike",\n    value: function _addLike() {\n      this._likeSelector.classList.add(this._buttonLikeActive);\n      console.log("сработал card.addLike");\n    }\n  }, {\n    key: "_removeLike",\n    value: function _removeLike() {\n      this._likeSelector.classList.remove(this._buttonLikeActive);\n      console.log("лайк удален removeLike");\n    }\n  }, {\n    key: "generateCard",\n    value: function generateCard(item) {\n      //затем копия темплейта изменяется пережд вставкой\n      //тут навесим нужные слушатели и заменим содержимое полей\n      this._element = this._getTemplate();\n      this._imageToOpen = this._element.querySelector(this._itemImage);\n      //переменные для лайков\n      this._likeSelector = this._element.querySelector(this._buttonLike);\n      this._likeCounter = this._element.querySelector(".form__like-counter");\n      //урна\n      this._iconDelete = this._element.querySelector(this._elementsDelete);\n      if (this._ownerId !== this._userId) {\n        this._iconDelete.remove();\n      }\n      //Окно и кнопка на странице одна, поэтому вешать слушатель нужно глобально\n      this._setEventListeners(); //добавим обработчики событий\n      //меняем содержимое полей\n      this._element.querySelector(this._signature).textContent = this._name;\n      this._imageToOpen.src = this._link;\n      this._imageToOpen.alt = this._name;\n      this._element.id = "".concat(this._id);\n      !this.сheckUserLike() ? this._removeLike() : this._addLike();\n      this.likesCounter(item); //отобразить лайки\n      console.log("лайкнута?", this.сheckUserLike());\n      return this._element; //получаем готовый элемент для вставки в dom\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      //открытие картинки в большом размере\n      this._imageToOpen.addEventListener("click", function () {\n        return _this._handleCardClick();\n      });\n      //для сохранения контекста он привязан в свойствах класса\n      //удаление по иконке\n      this._iconDelete.addEventListener("click", function () {\n        return _this._handlerTrashClick();\n      }); //(this._id, this._element,  this._item));\n      //лайки\n      this._likeSelector.addEventListener("click", function () {\n        _this._checkLike(_this._id);\n      });\n    }\n  }, {\n    key: "_handlerTrashClick",\n    value: function _handlerTrashClick() {\n      var _this2 = this;\n      this._handlerRemoveCard(this._id, function () {\n        _this2._removeItem();\n      }, this);\n    }\n\n    //ф-я удаления карточки\n  }, {\n    key: "_removeItem",\n    value: function _removeItem() {\n      this._element.remove();\n      // this._element = null;\n    }\n  }, {\n    key: "likesCounter",\n    value: function likesCounter(_ref2) {\n      var likes = _ref2.likes;\n      this._likeCounter.textContent = likes.length; //this._likes.length\n      console.log("каунтер сработал", "переданные значения:", likes.length);\n    }\n  }, {\n    key: "\\u0441heckUserLike",\n    value: function сheckUserLike() {\n      var _this3 = this;\n      console.log(\'старые значения массива лайков: \', this._likes);\n      //возвращает true усли карточка лайкнута польз\n      return this._likes.some(function (user) {\n        return _this3._isLiked = _this3._userId === user._id;\n      });\n    }\n  }]);\n  return Card;\n}();\n\n;// CONCATENATED MODULE: ./src/components/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(popupSelector, tags) {\n    FormValidator_classCallCheck(this, FormValidator);\n    // this._data = data;\n    this._popupSelector = popupSelector;\n    this._inputList = Array.from(this._popupSelector.querySelectorAll(tags.inputSelector)); //найдем массив инпутов\n    this._submitButtonSelector = this._popupSelector.querySelector(tags.submitButtonSelector);\n    this._form = this._popupSelector.querySelector(tags.popupForm);\n    this._inactiveButtonClass = tags.inactiveButtonClass;\n    this._inputErrorSign = tags.inputErrorSign;\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_showInputError",\n    value: function _showInputError(inputSelector) {\n      var inputErrorClass = this._popupSelector.querySelector(".".concat(inputSelector.id, "-error"));\n      inputSelector.classList.add(this._inputErrorSign); //красное подчеркивание\n      inputErrorClass.textContent = inputSelector.validationMessage; //errorMessage\n    }\n  }, {\n    key: "_hideInputError",\n    value: function _hideInputError(inputSelector) {\n      var inputErrorClass = this._popupSelector.querySelector(".".concat(inputSelector.id, "-error"));\n      inputSelector.classList.remove(this._inputErrorSign);\n      inputErrorClass.textContent = ""; //очистить текст ошибки при валидации\n    }\n\n    //показать/скрыть сообщение об ошибке\n  }, {\n    key: "_checkInputValidity",\n    value: function _checkInputValidity(inputSelector) {\n      if (!inputSelector.validity.valid) {\n        //если форма невалидна\n        this._showInputError(inputSelector); //показать сообщение об ошибке (formSelector, inputSelector, inputSelector.validationMessage)\n      } else {\n        this._hideInputError(inputSelector); //если невалидна скрыть  (formSelector, inputSelector)\n      }\n    }\n\n    //_hasInvalidInput используется в _toggleButtonState\n  }, {\n    key: "_hasInvalidInput",\n    value: function _hasInvalidInput() {\n      return this._inputList.some(function (inputSelector) {\n        //если хотя бы один элемент валиден\n        return !inputSelector.validity.valid; //вернуть значение поля validity.valid\n      }); //false если не валидны\n    }\n\n    //проверить валидны ли поля и переключить вид кнопки и состояние  submitButtonSelector попадает из внешнего окружения\n    //_toggleButtonState используется в _setEventListeners\n  }, {\n    key: "_toggleButtonState",\n    value: function _toggleButtonState() {\n      if (this._hasInvalidInput()) {\n        //если поля невалидны\n        this._submitButtonSelector.classList.add(this._inactiveButtonClass); //кнопка некликабельна\n        this._submitButtonSelector.disabled = true;\n      } else {\n        //если валидны\n        this._submitButtonSelector.classList.remove(this._inactiveButtonClass); //кнопка кликабельна\n        this._submitButtonSelector.disabled = false;\n      }\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      this._toggleButtonState(); //получим данные о валидности и переключим состояние кнопки сабмит\n      this._inputList.forEach(function (inputSelector) {\n        //для каждого элемента inputElement из массива инпутов inputSelector\n        inputSelector.addEventListener("input", function () {\n          _this._checkInputValidity(inputSelector);\n          _this._toggleButtonState(); //в случае надобности изменим состояние кнопки сабмит\n        });\n      });\n    }\n  }, {\n    key: "resetValidation",\n    value: function resetValidation() {\n      var _this2 = this;\n      //очищаем ошибки с инпутов\n      this._inputList.forEach(function (inputSelector) {\n        _this2._hideInputError(inputSelector);\n      });\n      //управляем кнопкой\n      this._toggleButtonState();\n    }\n  }, {\n    key: "enableValidation",\n    value: function enableValidation() {\n      //публичный класс, вызывающий внутренние методы\n      this._setEventListeners();\n    }\n  }]);\n  return FormValidator;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(renderer, containerSelector) {\n    Section_classCallCheck(this, Section);\n    //Свойство renderer — функция которая описывает логику создания новой карточки\n    //селектор контейнера, в который нужно добавлять созданные элементы\n    this._renderer = renderer;\n    this._containerSelector = document.querySelector(containerSelector);\n  }\n  Section_createClass(Section, [{\n    key: "addItems",\n    value: function addItems(item) {\n      this._containerSelector.prepend(this._renderer(item));\n    }\n  }, {\n    key: "clear",\n    value: function clear() {\n      //очистить контейнер перед вставкой\n      this._containerSelector.innerHTML = "";\n    }\n  }, {\n    key: "renderItems",\n    value: function renderItems(items) {\n      var _this = this;\n      //очищает контейнер, затем для каждого элемента\n      //массива применяет ф-ю renderer, которая отрисует и вставит элементы в dom\n      this.clear();\n      items.reverse().forEach(function (item) {\n        _this.addItems(item);\n      });\n    }\n  }]);\n  return Section;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = Popup_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n//отвечает за открытие и закрытие попапа\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector, tags) {\n    var _this = this;\n    Popup_classCallCheck(this, Popup);\n    _defineProperty(this, "_handleEscClose", function (evt) {\n      if (evt.key === "Escape") {\n        _this.close();\n      }\n    });\n    this._popupSelector = popupSelector;\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._classPopupOpened = tags.classPopupOpened;\n    this._popupCloseIcon = tags.popupCloseIcon;\n  }\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popupSelector.classList.add(this._classPopupOpened);\n      window.addEventListener("keyup", this._handleEscClose); //\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popupSelector.classList.remove(this._classPopupOpened);\n      window.removeEventListener("keyup", this._handleEscClose);\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      //закрытие esc\n      // window.addEventListener("keydown", this._handleEscClose);\n      //закрытие по клику на поле\n      this._popupSelector.addEventListener("mouseup", function (event) {\n        if (event.target === event.currentTarget || event.target.classList.contains(_this2._popupCloseIcon)) {\n          _this2.close();\n        }\n      });\n    }\n  }]);\n  return Popup;\n}();\n\n;// CONCATENATED MODULE: ./src/components/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n//класс Popup для картинки\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector, tags) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector, tags);\n    _this._bigImageLink = document.querySelector(tags.popupImage);\n    _this._bigImageName = document.querySelector(tags.popupSignature);\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(item) {\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n      // this._name = item.name;\n      // this._link = item.link;\n      this._bigImageLink.src = item.link; //проверить как называются вхдящие поля name link\n      this._bigImageLink.alt = item.name;\n      this._bigImageName.textContent = item.name;\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\nfunction PopupWithForm_defineProperty(obj, key, value) { key = PopupWithForm_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n\n\n//класс Popup для форм\n//входящая функция определит что именно делать с данными: сохранить в профиле или создать новую карточку\n//applySubmit будет вызвана по сабмиту формы\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, applySubmit, tags, consts) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector, tags, consts);\n    PopupWithForm_defineProperty(PopupWithForm_assertThisInitialized(_this), "_addApplySubmitFunction", function (evt) {\n      evt.preventDefault();\n      _this._applySubmit(_this._getInputValues());\n      // this.close();\n    });\n    _this._applySubmit = applySubmit;\n    _this._form = _this._popupSelector.querySelector(tags.popupForm);\n    _this._submitButton = _this._form.querySelector(tags.submitButtonSelector);\n    _this._inputList = Array.from(_this._form.querySelectorAll(tags.inputSelector)); //найдем массив инпутов\n    return _this;\n  }\n\n  //собирает данные всех полей формы для дальнейшего сохранения в карточку или новые данные польз.\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var _this2 = this;\n      this._inputValues = {};\n      this._inputList.forEach(function (input) {\n        _this2._inputValues[input.name] = input.value;\n      });\n      return this._inputValues;\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this3 = this;\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener("submit", function (evt) {\n        return _this3._addApplySubmitFunction(evt);\n      });\n    }\n\n    //Перезаписывает родительский метод `close`, так как при закрытии попапа форма должна ещё и сбрасываться.\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._form.reset();\n      // this._form.removeEventListener("submit", this._addApplySubmitFunction);\n    }\n\n    //вставляет данные из userInfo(имя и профессия) в форму Edit при открытии\n  }, {\n    key: "setInputValues",\n    value: function setInputValues(data) {\n      this._inputList.forEach(function (input) {\n        input.value = data[input.name];\n      });\n    }\n  }, {\n    key: "preloader",\n    value: function preloader(text) {\n      this._submitButton.textContent = text;\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/components/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var profileName = _ref.profileName,\n      profileJob = _ref.profileJob,\n      profileAvatar = _ref.profileAvatar;\n    UserInfo_classCallCheck(this, UserInfo);\n    //, avatar\n    this._profileName = profileName;\n    this._profileJob = profileJob;\n    this._profileAvatar = profileAvatar;\n  }\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      //- Содержит публичный метод `getUserInfo`, который возвращает объект с данными пользователя.\n      //Этот метод пригодится когда данные пользователя нужно будет подставить в форму при открытии.\n      return {\n        name: this._profileName.textContent,\n        about: this._profileJob.textContent,\n        avatar: this._profileAvatar.src\n      };\n    }\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(_ref2) {\n      var name = _ref2.name,\n        about = _ref2.about,\n        avatar = _ref2.avatar;\n      //принимает новые данные пользователя и добавляет их на страницу.\n      this._profileName.textContent = name;\n      this._profileJob.textContent = about;\n      this._profileAvatar.src = avatar;\n    }\n  }]);\n  return UserInfo;\n}();\n\n;// CONCATENATED MODULE: ./src/components/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(baseUrl, headers) {\n    Api_classCallCheck(this, Api);\n    //, authorization\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  Api_createClass(Api, [{\n    key: "_checkResponce",\n    value: function _checkResponce(res) {\n      //повторяющийся кот (^˵◕ω◕˵^)(^˵◕ω◕˵^)(^˵◕ω◕˵^)\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ".concat(res.status));\n    }\n  }, {\n    key: "getInitialCards",\n    value: function getInitialCards() {\n      var _this = this;\n      return fetch("".concat(this._baseUrl, "/cards"), {\n        headers: this._headers\n      }).then(function (res) {\n        return _this._checkResponce(res);\n      });\n    } //getInitialCards()\n  }, {\n    key: "getUserData",\n    value: function getUserData() {\n      var _this2 = this;\n      return fetch("".concat(this._baseUrl, "/users/me"), {\n        headers: this._headers\n      }).then(function (res) {\n        return _this2._checkResponce(res);\n      });\n    }\n  }, {\n    key: "setUserData",\n    value: function setUserData(data) {\n      var _this3 = this;\n      //{name, about}\n      return fetch("".concat(this._baseUrl, "/users/me"), {\n        method: "PATCH",\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return _this3._checkResponce(res);\n      });\n    } //setUserData\n  }, {\n    key: "addCard",\n    value: function addCard(data) {\n      var _this4 = this;\n      return fetch("".concat(this._baseUrl, "/cards"), {\n        method: "POST",\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return _this4._checkResponce(res);\n      });\n    } //addCard\n  }, {\n    key: "saveAvatar",\n    value: function saveAvatar(link) {\n      var _this5 = this;\n      return fetch("".concat(this._baseUrl, "/users/me/avatar"), {\n        method: "PATCH",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: link\n        })\n      }).then(function (res) {\n        return _this5._checkResponce(res);\n      });\n    }\n\n    //этот метод будет вызван в публичной функции index.js deleteCard,\n  }, {\n    key: "deleteCard",\n    value: function deleteCard(id) {\n      var _this6 = this;\n      return fetch("".concat(this._baseUrl, "/cards/").concat(id), {\n        method: "DELETE",\n        headers: this._headers\n      }).then(function (res) {\n        return _this6._checkResponce(res);\n      });\n    }\n  }, {\n    key: "addLike",\n    value: function addLike(id) {\n      var _this7 = this;\n      return fetch("".concat(this._baseUrl, "/cards/").concat(id, "/likes"), {\n        method: "PUT",\n        headers: this._headers\n      }).then(function (res) {\n        return _this7._checkResponce(res);\n      });\n    }\n  }, {\n    key: "removeLike",\n    value: function removeLike(id) {\n      var _this8 = this;\n      return fetch("".concat(this._baseUrl, "/cards/").concat(id, "/likes"), {\n        method: "DELETE",\n        headers: this._headers\n      }).then(function (res) {\n        return _this8._checkResponce(res);\n      });\n    }\n  }]);\n  return Api;\n}(); //Api\n\n;// CONCATENATED MODULE: ./src/components/PopupWithWarning.js\nfunction PopupWithWarning_typeof(obj) { "@babel/helpers - typeof"; return PopupWithWarning_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithWarning_typeof(obj); }\nfunction PopupWithWarning_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithWarning_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithWarning_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithWarning_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithWarning_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithWarning_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithWarning_toPropertyKey(arg) { var key = PopupWithWarning_toPrimitive(arg, "string"); return PopupWithWarning_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithWarning_toPrimitive(input, hint) { if (PopupWithWarning_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithWarning_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithWarning_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithWarning_get = Reflect.get.bind(); } else { PopupWithWarning_get = function _get(target, property, receiver) { var base = PopupWithWarning_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithWarning_get.apply(this, arguments); }\nfunction PopupWithWarning_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithWarning_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithWarning_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithWarning_setPrototypeOf(subClass, superClass); }\nfunction PopupWithWarning_setPrototypeOf(o, p) { PopupWithWarning_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithWarning_setPrototypeOf(o, p); }\nfunction PopupWithWarning_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithWarning_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithWarning_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithWarning_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithWarning_possibleConstructorReturn(this, result); }; }\nfunction PopupWithWarning_possibleConstructorReturn(self, call) { if (call && (PopupWithWarning_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithWarning_assertThisInitialized(self); }\nfunction PopupWithWarning_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithWarning_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithWarning_getPrototypeOf(o) { PopupWithWarning_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithWarning_getPrototypeOf(o); }\n\nvar PopupWithWarning = /*#__PURE__*/function (_Popup) {\n  PopupWithWarning_inherits(PopupWithWarning, _Popup);\n  var _super = PopupWithWarning_createSuper(PopupWithWarning);\n  function PopupWithWarning(popupSelector, tags, applySubmit) {\n    var _this;\n    PopupWithWarning_classCallCheck(this, PopupWithWarning);\n    _this = _super.call(this, popupSelector, tags);\n    _this._applySubmit = applySubmit; //внешн ф-я для вызова по сабмиту\n    _this._form = _this._popupSelector.querySelector(tags.popupForm);\n    return _this;\n  }\n  PopupWithWarning_createClass(PopupWithWarning, [{\n    key: "open",\n    value: function open(id, element, item) {\n      PopupWithWarning_get(PopupWithWarning_getPrototypeOf(PopupWithWarning.prototype), "open", this).call(this);\n      this._element = element;\n      this._id = id;\n      this._item = item;\n    }\n\n    // setNewHandler(action) {\n    //   this._applySubmit = action;\n    // }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithWarning_get(PopupWithWarning_getPrototypeOf(PopupWithWarning.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener("submit", function (evt) {\n        evt.preventDefault();\n        // this.close();\n        _this2._applySubmit(_this2._id, _this2._element, _this2._item);\n      });\n    }\n  }]);\n  return PopupWithWarning;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/pages/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n //   ЭТА СТРОКА ОБЯЗАТЕЛЬНА (ಠ益ಠ)\n\n\n //переименовать\n\n\n\n\n\n\nvar userId; //определим переменную чтобы записать в нее значение внутри ф-и\n\n//класс UserInfo\nvar userInfo = new UserInfo({\n  profileName: profileName,\n  profileJob: profileJob,\n  profileAvatar: profileAvatar\n}); //, profileAvatar\n\nvar popupWithFormEdit = new PopupWithForm(popupEdit, applySubmitEdit, tags, consts); //добавим информацию о пользователе\nvar popupWithFormAdd = new PopupWithForm(popupAdd, applySubmitAdd, tags, consts); //добавим новую карточку\nvar popupWithFormEditAvatar = new PopupWithForm(popupEditAvatar, applySubmitEditAvatar, tags, consts); //попап редактирования фото  замениьть вторую ф-ю\n\n//FormValidator\nvar validationAddForm = new FormValidator(popupAdd, tags); //создадим экземпляры класса валидации\nvar validationEditForm = new FormValidator(popupEdit, tags); //создавать экз из массива форм нельзя поскольку они должны находиться в\n//публичном поле для вызова из ф-и открытия\nvar validationEditAvatar = new FormValidator(popupEditAvatar, tags);\n\n//Каждый попап нужно создать только 1 раз  в теле файла и вызвать у него 1 раз setEventListeners,\n//так как попапы всегда находятся в DOM и достаточно 1 раз навесить все обработчики на них.\nvar popupWithImage = new PopupWithImage(bigImage, tags);\n\n//экземпляр класса api для получения карточек\nvar api = new Api("https://mesto.nomoreparties.co/v1/cohort-62", {\n  authorization: "d5c4048e-b7e4-4333-b5f6-798b19dce01c",\n  "Content-Type": "application/json"\n});\nvalidationAddForm.enableValidation(); //выполнить ф-ю, которая навесит слушатели событий полям ввода и кнопке\nvalidationEditForm.enableValidation();\nvalidationEditAvatar.enableValidation();\npopupWithFormAdd.setEventListeners();\npopupWithFormEdit.setEventListeners();\npopupWithFormEditAvatar.setEventListeners();\npopupWithImage.setEventListeners();\n\n//слушатель событий по кнопке редактирования профиля\nbuttonEdit.addEventListener("click", function () {\n  validationEditForm.resetValidation(); //сбросить старые ошибки\n  popupWithFormEdit.setInputValues(userInfo.getUserInfo());\n  popupWithFormEdit.open();\n});\n//открытие попапа для добавления карточек\nbuttonAdd.addEventListener("click", function () {\n  validationAddForm.resetValidation(); //удалить текст и оформление ошибки\n  popupWithFormAdd.open(); //возможно здесь не надо сразу вызывать\n});\n//редактирование профиля\nprofileOverlay.addEventListener("click", function () {\n  validationEditAvatar.resetValidation();\n  popupWithFormEditAvatar.open();\n});\nfunction applySubmitEditAvatar(_ref) {\n  var link = _ref.link;\n  //ф-я, делающая запрос к серверу и сохраняющая данные профиля\n  popupWithFormEditAvatar.preloader("Cохранение...");\n  api.saveAvatar(link).then(function (res) {\n    //получили положительный ответ сервера, сохраним в dom\n    userInfo.setUserInfo(res);\n    popupWithFormEditAvatar.close();\n  }).catch(function (err) {\n    console.log(err, "ошибка при изменении аватара польз");\n  }).finally(function () {\n    popupWithFormEditAvatar.preloader("Cохранить");\n  });\n}\n\n//найти как передать id, card\nvar popupWithWarning = new PopupWithWarning(popupWarning,\n//\ntags, function (id, callback, scope) {\n  //applySubmit из PopupWithWarning\n  api.deleteCard(id).then(function () {\n    // console.log(makeCard(item));\n\n    callback.bind(scope)();\n    // item\n    // .removeItem();//userCards.addItems(makeCard(item))\n    popupWithWarning.close();\n  }).catch(function (err) {\n    console.log(err, "ошибка при удалении карточки"); // выведем ошибку\n  });\n} //applySubmit из PopupWithWarning\n);\n\npopupWithWarning.setEventListeners(); //вынесен в глобальную область\n\n//Получение данных при перезагрузке страницы: данные польз и карточки\nPromise.all([api.getUserData(), api.getInitialCards()]) //получим данные при перезагрузке страницы\n.then(function (_ref2) {\n  var _ref3 = _slicedToArray(_ref2, 2),\n    userData = _ref3[0],\n    initialCards = _ref3[1];\n  userId = userData._id;\n  // console.log(initialCards[owner]);\n  //подгрузить данные о пользоавтеле\n  userInfo.setUserInfo(userData);\n  //отрендерить карточки\n  userCards.renderItems(initialCards);\n  // console.log(initialCards);\n  //получить инф о карточках и вставить\n}).catch(function (err) {\n  console.log(err, "ошибка при загрузке страницы"); // выведем ошибку в консоль\n});\n\n//ф-я будет сохранять карточку\nfunction applySubmitAdd(data) {\n  //добавит новую карточку, вместо data name link передать\n  popupWithFormAdd.preloader("Создание...");\n  api.addCard(data).then(function (res) {\n    userCards.addItems(res);\n    popupWithFormAdd.close();\n    // userCards.clear();\n  }).catch(function (err) {\n    console.log(err, "ошибка при добавлении новой карточки");\n  }).finally(function () {\n    popupWithFormAdd.preloader("Cоздать");\n  });\n  //по сабмиту произойдет отправка данных методом post на сервер, в случае положительного ответа ответ создаст карточку\n} //applySubmitAdd\n\n//сохранение данных пользователя: имя и инф. Получает данные из PopupWitnForm и передает их в запрос на сервер,\n//после обновления данных на сервере страницаобновляется с новыми данными\nfunction applySubmitEdit(data) {\n  //{ name, about }\n  popupWithFormEdit.preloader("Сохранение...");\n  api.setUserData(data).then(function (res) {\n    userInfo.setUserInfo(res);\n    popupWithFormEdit.close();\n  }).catch(function (err) {\n    console.log(err, "ошибка при редактировании имени и данных пользователя"); // выведем ошибку в консоль\n  }).finally(function () {\n    popupWithFormEdit.preloader("Cохранить");\n  });\n} //applySubmitEdit\n\nfunction makeCard(item) {\n  var card = new Card(item, function () {\n    //handleCardClick открывает попап с картинкой\n    popupWithImage.open(item);\n  }, function checkLike(id) {\n    // debugger\n    //checkLike,\n    console.log("лайкнута?", card.сheckUserLike());\n    if (!card.сheckUserLike()) {\n      //если нет лайка польз\n      api.addLike(id) //сделать запрос к серверу на добавление\n      .then(function (res) {\n        console.log(\'в каунтер попадает:\', res, "успешно:добавление лайка в index вызывает каунтер и меняет оформление");\n        card.setLike(res); //изменить оформление и обновить счетчик (до обновления страницы)\n        card.likesCounter(res);\n        // card.addLike();\n      }).catch(function (err) {\n        return console.log(err, "ошибка: добавление лайка в index вызывает каунтер и меняет оформление");\n      });\n      // .finallyy(() => {\n      //   // card.сheckUserLike();\n      // });\n    } else {\n      api.removeLike(id).then(function (res) {\n        console.log(\'в каунтер попадает:\', res, "успешно: удаление лайка в index вызывает каунтер и меняет оформление");\n        card.setLike(res);\n        ; //изменить оформление и обновить счетчик (до обновления страницы)\n        card.likesCounter(res);\n        // card.removeLike();\n      }).catch(function (err) {\n        return console.log(err, "ошибка: удаление лайка в index вызывает каунтер и меняет оформление");\n      });\n    }\n  },\n  //checkLike\n  tags.templateBox,\n  //templateSelector\n  tags, function (id, element, item) {\n    //handlerRemoveCard\n    popupWithWarning.open(id, element, item);\n  },\n  //handlerRemoveCard\n  userId //конец параметров для card\n  ); //card\n  return card;\n}\n; //makeCard\n\nfunction renderer(item) {\n  //ф-я renderer, первый параметр Section\n  var element = makeCard(item).generateCard(item);\n  return element;\n}\n; //ф-я renderer;//createCard\n\n//экземпляр класса Section для рендеринга карточек\nvar userCards = new Section(renderer, tags.elementsBox); //containerSelector второй параметр экз класса section\n\n//( o˘◡˘o)//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///676\n')}},__webpack_exports__={};__webpack_modules__[676]()})();